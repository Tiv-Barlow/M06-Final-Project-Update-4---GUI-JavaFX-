//M06 Final Project: Update 4 - GUI (JavaFX)
//Ivy Tech Community College
//SDEV 200 - Java
//Professor Bumgardner
//Nativida Muhammad
// 05 May 2024

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.geometry.Insets;
import javafx.stage.Stage;

public class Main extends Application {

  // Sample data (replace with actual data source)
  User currentUser;
  Account currentAccount;

  @Override
  public void start(Stage primaryStage) {
    // Create UI components
    Label usernameLabel = new Label("Username:");
    TextField usernameField = new TextField();

    Label passwordLabel = new Label("Password:");
    PasswordField passwordField = new PasswordField();

    Button loginButton = new Button("Login");

    Label nameLabel = new Label("Name:");
    TextField nameField = new TextField();

    Label balanceLabel = new Label("Balance:");
    TextField balanceField = new TextField();

    Label depositLabel = new Label("Deposit:");
    TextField depositField = new TextField();

    Button depositButton = new Button("Deposit");

    // Event handling for login button
    loginButton.setOnAction(event -> {
      String username = usernameField.getText();
      String password = passwordField.getText();
      // Authenticate user
      if (authenticateUser(username, password)) {
        // Load user data
        loadData();
        // Display user data
        nameField.setText(currentUser.getName());
        balanceField.setText(String.valueOf(currentAccount.getBalance()));
      } else {
        showAlert("Login Failed", "Invalid username or password.");
      }
    });

    // Event handling for deposit button
    depositButton.setOnAction(event -> {
      try {
        double amount = Double.parseDouble(depositField.getText());
        currentAccount.deposit(amount);
        balanceField.setText(String.valueOf(currentAccount.getBalance()));
      } catch (NumberFormatException e) {
        showAlert("Invalid Input", "Please enter a valid amount for deposit.");
      }
    });

    // Layout setup
    GridPane grid = new GridPane();
    grid.setPadding(new Insets(20));
    grid.setVgap(10);
    grid.setHgap(10);

    // Add components to layout
    grid.add(usernameLabel, 0, 0);
    grid.add(usernameField, 1, 0);
    grid.add(passwordLabel, 0, 1);
    grid.add(passwordField, 1, 1);
    grid.add(loginButton, 1, 2);
    grid.add(nameLabel, 0, 3);
    grid.add(nameField, 1, 3);
    grid.add(balanceLabel, 0, 4);
    grid.add(balanceField, 1, 4);
    grid.add(depositLabel, 0, 5);
    grid.add(depositField, 1, 5);
    grid.add(depositButton, 1, 6);

    // Scene setup
    Scene scene = new Scene(grid, 400, 300);

    // Stage setup
    primaryStage.setTitle("Banking App");
    primaryStage.setScene(scene);
    primaryStage.show();
  }

  // Method to authenticate user (dummy method)
  private boolean authenticateUser(String username, String password) {
    // Dummy authentication, replace with actual authentication logic
    return username.equals("admin") && password.equals("password");
  }

  // Method to show alert dialog
  private void showAlert(String title, String message) {
    Alert alert = new Alert(Alert.AlertType.WARNING);
    alert.setTitle(title);
    alert.setHeaderText(null);
    alert.setContentText(message);
    alert.showAndWait();
  }

  // Dummy method to simulate data retrieval
  private void loadData() {
    // Replace with actual data retrieval logic
    currentUser = new User();
    currentAccount = new Account();
    currentUser.setUsername("admin");
    currentUser.setName("Admin User");
    currentAccount.setAccountNumber(123456);
    currentAccount.setAccountBalance(1000.0);
  }

  public static void main(String[] args) {
    launch(args);
  }
}

class User {
  private String username;
  private String name;

  // Getters and setters
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }
}

class Account {
  private int accountNumber;
  private double accountBalance;

  // Getters and setters
  public int getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(int accountNumber) {
    this.accountNumber = accountNumber;
  }

  public double getBalance() {
    return accountBalance;
  }

  public void setAccountBalance(double accountBalance) {
    this.accountBalance = accountBalance;
  }

  // Deposit method
  public void deposit(double amount) {
    this.accountBalance += amount;
  }
}
